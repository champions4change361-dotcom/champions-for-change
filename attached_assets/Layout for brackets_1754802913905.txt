Conversation with Bubble
Started on August 2, 2025 at 01:08 PM Eastern Time (US & Canada) time EDT (GMT-0400)

---

01:08 PM | champions4change361@gmail.com: I want to make a bracket system that provides options like single, double elimination and those brackets can be updated manually or score based

01:08 PM | BubbleBot: Great question! Building a tournament bracket system in Bubble is definitely achievable. Here's how you can approach it: 
 Data Structure Setup 
Create Option Sets for your tournament types:
 - Go to Data → Option sets 
- Create a "Tournament Type" option set with options like "Single Elimination" and "Double Elimination" (https://manual.bubble.io/help-guides/data/static-data/option-sets) 
 Set up your Data Types: 
 - Tournament (with fields like name, type, status) 
- Match (with fields like tournament, round, player1, player2, score1, score2, winner) 
- Player/Team (with relevant participant info) 
 Tournament Logic 
For manual updates, you can create workflows that allow administrators to:
 - Set match winners directly 
- Update scores manually 
- Advance winners to next rounds 
 For score-based updates, set up conditional workflows that: 
 - Automatically determine winners when scores are entered 
- Progress winners to subsequent matches 
- Handle bracket advancement logic 
 Implementation Tips 
Use repeating groups to display your bracket structure, with dynamic expressions to show match pairings and results. You can create different page layouts for single vs. double elimination formats.
 While I can't build the app directly for you, I'm happy to walk you through specific aspects like setting up the data relationships, creating the bracket display logic, or handling the tournament progression workflows. What part would you like to dive into first? 
 
Sources:
Option sets | Bubble Docs (https://manual.bubble.io/help-guides/data/static-data/option-sets)
How to Build a Cash-Back App With No Code (https://bubble.io/support/en/articles/8520785-how-to-build-a-cash-back-app-with-no-code)
How to Build a Budgeting App Like Mint With No-Code (https://bubble.io/support/en/articles/8959210-how-to-build-a-budgeting-app-like-mint-with-no-code)

01:11 PM | champions4change361@gmail.com: I have some really good data sets already it is the visualization that I’m struggling with. I want the brackets to look like challonge brackets. But I’m not sure how to do that.

01:11 PM | BubbleBot: Perfect! Creating Challonge-style bracket visualizations is definitely achievable with our design elements. Here's how you can approach the visual layout: 
 Core Structure 
 Use Groups as your main building blocks for each match box. These will contain the player names, scores, and connection lines. (https://manual.bubble.io/core-resources/elements/native-mobile-elements/visual-elements) You can style these groups with borders, rounded corners, and background colors to match the Challonge aesthetic. 
 Layout Strategy 
 For the bracket tree structure, consider using Repeating Groups arranged in columns for each tournament round. (https://manual.bubble.io/help-guides/design/elements/web-app/containers/repeating-groups) Set each repeating group to display matches for that specific round (Round 1, Quarterfinals, etc.). 
 Visual Connections 
 Create the connecting lines between matches using thin rectangular elements or borders. Position these between your match groups to show the tournament flow visually. 
 Responsive Design 
 Since tournament brackets can get wide, make sure to implement our responsive design features so the bracket adapts well to different screen sizes. (https://bubble.io/support/en/articles/10860624-visual-elements) 
 Styling Tips 
 - Use consistent spacing between rounds 
- Apply hover effects to make matches interactive 
- Consider using conditional formatting to highlight completed vs. upcoming matches 
 While I can't build the visual layout directly for you, I can help you work through specific design challenges like positioning elements or setting up the repeating group logic for each round. What specific aspect of the bracket visualization would you like to tackle first? 
 
Sources:
Repeating groups | Bubble Docs (https://manual.bubble.io/help-guides/design/elements/web-app/containers/repeating-groups)
Visual elements | Bubble Docs (https://manual.bubble.io/core-resources/elements/native-mobile-elements/visual-elements)
Visual Elements (https://bubble.io/support/en/articles/10860624-visual-elements)

01:14 PM | champions4change361@gmail.com: So my users build tournaments on my page named foundation. Once they click submit after making choices through my cascading dropdowns the page redirects to the nexus page where they add team or participant information. Ideally the bracket will be created with the first round ready for user input data like the aforementioned team or participant names.

01:15 PM | BubbleBot: Perfect! You're on the right track with your tournament flow. Here's how to set up the bracket creation and data passing between your foundation and nexus pages: 
 Setting Up Page Navigation with Data 
 When users click submit on your foundation page, create a workflow that: 
 - Creates a new tournament entry in your database with their dropdown selections (https://bubble.io/support/en/articles/9128253-how-to-build-a-ticketmaster-clone-with-no-code) 
- Navigates to the nexus page, sending the newly created tournament data along 
 Configuring Your Nexus Page 
 Set your nexus page's content type to "Tournament" so it can receive the tournament data from foundation . This allows you to access all the tournament settings (type, number of participants, etc.) that were selected. 
 Pre-generating the First Round 
 On the nexus page, use the tournament data to: 
 - Calculate how many first-round matches you need based on participant count 
- Create empty match records in your database for Round 1 
- Display these matches using a repeating group set to show matches where round = 1 (https://bubble.io/support/en/articles/9141909-how-to-build-an-eventbrite-clone-without-writing-code) 
 Input Setup 
 Within each match cell in your repeating group, add input fields for team/participant names. Set the initial content to be blank since these are new entries (https://bubble.io/support/en/articles/11072381-section-3-start-working-with-data-program-popups-lesson-3-5). Users can then fill in the participant information directly into the bracket structure. 
 This approach gives you a pre-built bracket framework that's ready for user input while maintaining all the tournament configuration from your foundation page! 
 
Sources:
How to Build a Ticketmaster Clone With No Code (https://bubble.io/support/en/articles/9128253-how-to-build-a-ticketmaster-clone-with-no-code)
How To Build An Eventbrite Clone Without Writing Code (https://bubble.io/support/en/articles/9141909-how-to-build-an-eventbrite-clone-without-writing-code)
How To Build a Kickstarter Clone Without Writing Code (https://bubble.io/support/en/articles/9141417-how-to-build-a-kickstarter-clone-without-writing-code)
Section 3: Start Working With Data - Program popups (Lesson 3.5) (https://bubble.io/support/en/articles/11072381-section-3-start-working-with-data-program-popups-lesson-3-5)

01:15 PM | BubbleBot: Did that answer your question?

01:16 PM | champions4change361@gmail.com: So after that is setup is that when I want to adjust the visualizations?

01:16 PM | BubbleBot: Exactly! Once you have your data structure set up with the tournament created and the first round matches generated on your nexus page, that's the perfect time to focus on the visual styling. 
 Here's the ideal workflow for your bracket visualization: 
 After Data Setup: 
 - Your tournament data is passed from foundation to nexus 
- First round matches are created in the database 
- Empty match records are ready for team/participant input 
 Then Focus on Visualization: 
 - Style your repeating groups to look like Challonge brackets (https://bubble.io/support/en/articles/10028994-candidate-signup-getting-started-with-bubble-lesson-6-4) 
- Add visual elements like borders, rounded corners, and connecting lines between matches 
- Set up conditional formatting to show different states (empty, in-progress, completed) (https://bubble.io/support/en/articles/9641555-form-design-getting-started-with-bubble-lesson-2-3) 
- Configure responsive design so brackets work on different screen sizes 
 Visual Polish: 
 - Use groups as containers for each match box with consistent spacing 
- Add hover effects and interactive elements for better user experience (https://bubble.io/support/en/articles/9797448-workflows-and-logic-getting-started-with-bubble-lesson-3-6) 
- Apply your color scheme and styling to match the Challonge aesthetic 
 This approach ensures your bracket has all the necessary data foundation before you spend time on the visual presentation. You'll be able to see real match data as you style, making it easier to perfect the layout and user experience! 
 What specific visual aspect would you like to tackle first - the match box styling or the connecting lines between rounds? 
 
Sources:
Candidate signup: Getting started with Bubble (Lesson 6.4) (https://bubble.io/support/en/articles/10028994-candidate-signup-getting-started-with-bubble-lesson-6-4)
Form design: Getting started with Bubble (Lesson 2.3) (https://bubble.io/support/en/articles/9641555-form-design-getting-started-with-bubble-lesson-2-3)
Workflows and logic: Getting started with Bubble (Lesson 3.6) (https://bubble.io/support/en/articles/9797448-workflows-and-logic-getting-started-with-bubble-lesson-3-6)

01:18 PM | champions4change361@gmail.com: I think match box styling first. I get confused about cells and what cells hold teams and scores. When I change a team name often times it changes the team name for both teams. So I’m guessing I need nested groups within the repeating group cells.

01:18 PM | BubbleBot: You're absolutely right about needing nested groups! The issue you're experiencing happens because elements in a repeating group cell all reference the same "Current Cell's Match" data source. (https://bubble.io/support/en/articles/11427976-how-to-use-the-repeating-group-element) 
 Here's the proper structure for your match boxes: 
 Main Setup: 
 - Repeating Group (data source: matches for that round) 
- Inside each cell: Create a Group container that references "Current Cell's Match" (https://bubble.io/support/en/articles/11072371-section-3-start-working-with-data-display-data-in-a-list-lesson-3-3) 
 Within that Group, create separate nested groups for each team: 
 Team 1 Group: 
 - Text element for team name (set to Current Cell's Match's Team1) 
- Input/text for score (set to Current Cell's Match's Score1) 
 Team 2 Group: 
 - Text element for team name (set to Current Cell's Match's Team2) 
- Input/text for score (set to Current Cell's Match's Score2) 
 Why this works: When you place a group inside a repeating group cell, that group gets access to the "Current Cell's" data. Then, any elements inside those nested groups can reference specific fields from that match record. 
 Layout tip: Set your main match group to "Column" layout to stack Team 1 above Team 2, with proper spacing between them. (https://bubble.io/support/en/articles/9319874-layout-and-spacing-getting-started-with-bubble-lesson-1-4) 
 This nested structure prevents the team name changes from affecting both teams because each nested group references different database fields (Team1 vs Team2). 
 While I can't build this directly for you, this approach will give you the clean separation you need for your Challonge-style brackets! 
 
Sources:
Section 3: Start Working With Data - Display data in a list (Lesson 3.3) (https://bubble.io/support/en/articles/11072371-section-3-start-working-with-data-display-data-in-a-list-lesson-3-3)
How to Use the Repeating Group Element (https://bubble.io/support/en/articles/11427976-how-to-use-the-repeating-group-element)
Web app: Containers - Repeating groups (https://bubble.io/support/en/articles/10608163-web-app-containers-repeating-groups)
Layout and spacing: Getting started with Bubble (Lesson 1.4) (https://bubble.io/support/en/articles/9319874-layout-and-spacing-getting-started-with-bubble-lesson-1-4)

01:18 PM | BubbleBot: Is that what you were looking for?

---
Exported from Bubble on August 2, 2025 at 01:19 PM Eastern Time (US & Canada) time EDT (GMT-0400)